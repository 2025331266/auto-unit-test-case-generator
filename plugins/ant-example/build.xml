<?xml version="1.0" encoding="UTF-8"?>
<project name="Example Ant Build with SmartUt" default="compile" xmlns:jacoco="antlib:org.jacoco.ant">

  <description>
    Example Ant build file that demonstrates how SmartUt can be
    integrated into an existing build.
  </description>

  <!-- Project's properties -->
  <property name="src.dir" location="src" />
  <property name="tests.dir" location="test" />
  <property name="build.dir" location="build" />
  <property name="build.classes.dir" location="${build.dir}/classes" />
  <property name="build.classes-instr.dir" location="${build.dir}/classes-instr" />
  <property name="build.test.classes.dir" location="${build.dir}/tests" />

  <!-- Project's deps -->
  <property name="lib.dir" value="lib" />
  <property name="junit.jar" value="${lib.dir}/junit.jar" />
  <property name="hamcrest.jar" value="${lib.dir}/hamcrest-core.jar" />

  <!-- SmartUt's properties -->
  <property name="smartut.version" value="1.0.6" />
  <property name="smartut.jar" value="${lib.dir}/smartut-${smartut.version}.jar" />
  <property name="smartut-runtime.jar" value="${lib.dir}/smartut-standalone-runtime-${smartut.version}.jar" />
  <property name="smartut.report.dir" location="${build.dir}/smartut.report" />

  <!-- JaCoCo's properties -->
  <property name="jacoco.version" value="0.8.5" />
  <property name="jacoco.zip" value="${lib.dir}/jacoco-${jacoco.version}.zip" />
  <property name="jacoco.dist.dir" value="${lib.dir}/jacoco-dist" />
  <property name="jacoco-ant.jar" value="${jacoco.dist.dir}/lib/jacocoant.jar" />
  <property name="jacoco.report.dir" location="${build.dir}/jacoco.report" />
  <property name="jacoco.exec.file" location="${jacoco.report.dir}/jacoco.exec"/>

  <target name="install.deps">
    <mkdir dir="${lib.dir}" />
    <!-- Get project's deps -->
    <get dest="${junit.jar}" src="https://repo1.maven.org/maven2/junit/junit/4.12/junit-4.12.jar" skipexisting="true" />
    <get dest="${hamcrest.jar}" src="https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar" skipexisting="true" />
    <!-- Get SmartUt -->
    <get dest="${smartut.jar}" src="https://github.com/SmartUt/smartut/releases/download/v${smartut.version}/smartut-${smartut.version}.jar" skipexisting="true" />
    <get dest="${smartut-runtime.jar}" src="https://github.com/SmartUt/smartut/releases/download/v${smartut.version}/smartut-standalone-runtime-${smartut.version}.jar" skipexisting="true" />
    <!-- Get JaCoCo's -->
    <get dest="${jacoco.zip}" src="https://github.com/jacoco/jacoco/releases/download/v${jacoco.version}/jacoco-${jacoco.version}.zip" skipexisting="true" />
    <unzip src="${jacoco.zip}" dest="${jacoco.dist.dir}" overwrite="false" />
  </target>

  <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
    <classpath path="${jacoco-ant.jar}"/>
  </taskdef>

  <target name="clean">
    <delete dir="${build.dir}" />
  </target>

  <!--
    Compile source code (including test cases if any)
  -->
  <target name="compile" depends="install.deps">
    <mkdir dir="${build.classes.dir}" />
    <javac source="1.8" target="1.8"
           srcdir="${src.dir}"
           destdir="${build.classes.dir}"
           debug="true"
           includeantruntime="false"
           deprecation="false"
           optimize="false">
    </javac>

    <mkdir dir="${build.test.classes.dir}" />
    <javac source="1.8" target="1.8"
           srcdir="${tests.dir}"
           destdir="${build.test.classes.dir}">
      <classpath>
        <pathelement location="${build.classes.dir}" />
        <pathelement path="${junit.jar}" />
        <pathelement path="${smartut-runtime.jar}" />
      </classpath>
    </javac>
  </target>

  <!--
    Generate test cases
  -->
  <target name="generate.tests" depends="compile">
    <java jar="${smartut.jar}" fork="true">
      <arg value="-class" />
      <arg value="org.ant_project_example.CharacterCounter" />
      <arg value="-projectCP" />
      <arg value="${build.classes.dir}" />
      <arg value="-Dtest_dir=${tests.dir}" />
      <arg value="-Dreport_dir=${smartut.report.dir}" />
      <arg value="-generateSuite" />
    </java>
  </target>

  <!--
    Run test cases
  -->
  <target name="run.tests" depends="compile">
    <junit printsummary="yes" haltonfailure="yes" haltonerror="yes" fork="yes" forkmode="perBatch" showOutput="true">
      <classpath>
        <pathelement location="${build.classes.dir}" />
        <pathelement location="${build.test.classes.dir}" />
        <pathelement path="${junit.jar}" />
        <pathelement path="${hamcrest.jar}" />
        <pathelement path="${smartut-runtime.jar}" />
      </classpath>
      <formatter type="plain" usefile="false" />
      <batchtest>
        <fileset dir="${tests.dir}">
          <include name="**/*.java" />
          <exclude name="**/*_scaffolding.java" />
        </fileset>
      </batchtest>
    </junit>
  </target>

  <!--
    Collect tests' coverage
  -->
  <target name="collect.tests.coverage" depends="compile">
    <mkdir dir="${jacoco.dist.dir}" />
    <!-- Perform offline instrumentation -->
    <jacoco:instrument destdir="${build.classes-instr.dir}">
      <fileset dir="${build.classes.dir}" includes="**/*.class" />
    </jacoco:instrument>
    <!-- Run tests -->
    <jacoco:coverage destfile="${jacoco.exec.file}">
      <junit printsummary="yes" haltonfailure="yes" haltonerror="yes" fork="yes" forkmode="perBatch" showOutput="true">
        <classpath>
          <pathelement location="${build.classes-instr.dir}" />
          <pathelement location="${build.test.classes.dir}" />
          <pathelement path="${junit.jar}" />
          <pathelement path="${hamcrest.jar}" />
          <pathelement path="${smartut-runtime.jar}" />
        </classpath>
        <formatter type="plain" usefile="false" />
        <batchtest>
          <fileset dir="${tests.dir}">
            <include name="**/*.java" />
            <exclude name="**/*_scaffolding.java" />
          </fileset>
        </batchtest>
      </junit>
    </jacoco:coverage>
  </target>

  <!--
    Generate coverage report
  -->
  <target name="coverage.report" depends="collect.tests.coverage">
    <jacoco:report>
      <executiondata>
        <file file="${jacoco.exec.file}" />
      </executiondata>
      <structure name="SmartUt Ant Example">
        <classfiles>
          <fileset dir="${build.classes.dir}" />
        </classfiles>
        <sourcefiles encoding="UTF-8">
        <fileset dir="${src.dir}" />
        </sourcefiles>
      </structure>
      <html destdir="${jacoco.report.dir}"/>
      <csv destfile="${jacoco.report.dir}/report.csv"/>
      <xml destfile="${jacoco.report.dir}/report.xml"/>
    </jacoco:report>
  </target>

</project>
